#include <iostream>
#include <string.h> // Включение заголовочного файла для работы со строками
using namespace std;

const int MAXSIZE = 100; // Максимальный размер стека

// Структура для стека
struct Stack
{
    char data[MAXSIZE]; // Массив данных стека
    int size; // Размер стека
};

// Функция для добавления элемента в стек
void Push(Stack& S, char x)
{
    if (S.size == MAXSIZE) { // Проверка на переполнение стека
        printf("Стек переполнен");
        return;
    }
    S.data[S.size] = x; // Добавление элемента в стек
    S.size++; // Увеличение размера стека
}

// Функция для удаления элемента из стека
char Pop(Stack& S)
{
    if (S.size == 0) { // Проверка на пустоту стека
        printf("Стек пуст");
        return char(255); // Возврат символа, обозначающего ошибку
    }
    S.size--; // Уменьшение размера стека
    return S.data[S.size]; // Возвращение удаленного элемента
}

// Основная функция программы
void main()
{
    setlocale(LC_ALL, "Rus"); 
    char br1[3] = { '(', '[', '{' }; // Открывающие скобки
    char br2[3] = { ')', ']', '}' }; // Закрывающие скобки
    char s[80], upper; // Входная строка и переменная для хранения верхнего элемента стека
    int i, k, OK; // Переменные для циклов и проверки
    Stack S; // Стек символов
    printf("Введите выражение со скобками> ");
    gets_s(s); // Получение строки с клавиатуры
    S.size = 0; // Начальный размер стека равен 0
    OK = 1; // Переменная, отвечающая за корректность выражения, изначально установлена в 1
    for (i = 0; OK && (s[i] != '\0'); i++) // Цикл по всей строке s
        for (k = 0; k < 3; k++) { // Проверка каждой из трех скобок
            if (s[i] == br1[k]) { // Если символ является открывающей скобкой
                Push(S, s[i]); // Добавляем его в стек
                break; // Прерываем цикл проверки скобок
            }
            if (s[i] == br2[k]) { // Если символ является закрывающей скобкой
                upper = Pop(S); // Извлекаем верхний элемент стека
                if (upper != br1[k]) // Если верхний элемент не соответствует соответствующей открывающей скобке
                    OK = 0; // Устанавливаем флаг корректности в 0
                break; // Прерываем цикл проверки скобок
            }
        }
    if (OK && (S.size == 0)) // Если проверка завершилась без ошибок и стек пуст
        printf("\nВыражение правильное\n"); 
    else
        printf("\nВыражение неправильное \n");
    system("PAUSE"); // Приостановка выполнения программы перед закрытием окна
}
